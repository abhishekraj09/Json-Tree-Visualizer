{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\OneDrive\\\\Desktop\\\\JSON TREE VISUALIZER\\\\json-tree-visualizer\\\\src\\\\components\\\\FlowTree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useCallback } from \"react\";\nimport ReactFlow, { Background } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getNodeColor = value => {\n  if (value === null) return \"#f59e0b\";\n  if (Array.isArray(value)) return \"#10b981\";\n  if (typeof value === \"object\") return \"#6366f1\";\n  return \"#3b82f6\";\n};\nconst CustomNode = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    padding: 8,\n    borderRadius: 8,\n    background: data.bg,\n    color: \"#fff\",\n    textAlign: \"center\",\n    minWidth: 100\n  },\n  children: data.label\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n_c = CustomNode;\nexport default function FlowTree({\n  nodes,\n  edges,\n  onNodeClick,\n  rfInstanceRef\n}) {\n  _s();\n  const nodeTypes = useMemo(() => ({\n    custom: CustomNode\n  }), []);\n  const enrichedNodes = nodes.map(n => {\n    var _n$data;\n    return {\n      ...n,\n      type: \"custom\",\n      data: {\n        ...n.data,\n        bg: getNodeColor((_n$data = n.data) === null || _n$data === void 0 ? void 0 : _n$data.value)\n      }\n    };\n  });\n  const styledEdges = edges.map(e => ({\n    ...e,\n    type: \"smoothstep\",\n    animated: false,\n    style: {\n      stroke: \"#4f46e5\",\n      strokeWidth: 2\n    }\n  }));\n  const handleNodeClick = useCallback((evt, node) => onNodeClick === null || onNodeClick === void 0 ? void 0 : onNodeClick(evt, node), [onNodeClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full w-full\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: enrichedNodes,\n      edges: styledEdges,\n      nodeTypes: nodeTypes,\n      onNodeClick: handleNodeClick,\n      fitView: true,\n      fitViewOptions: {\n        padding: 0.3\n      },\n      onInit: inst => {\n        if (rfInstanceRef) rfInstanceRef.current = inst;\n      },\n      children: /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_s(FlowTree, \"5qpv3sEECEkNYhXGQijKFS72lt8=\");\n_c2 = FlowTree;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomNode\");\n$RefreshReg$(_c2, \"FlowTree\");","map":{"version":3,"names":["React","useMemo","useCallback","ReactFlow","Background","jsxDEV","_jsxDEV","getNodeColor","value","Array","isArray","CustomNode","data","style","padding","borderRadius","background","bg","color","textAlign","minWidth","children","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","FlowTree","nodes","edges","onNodeClick","rfInstanceRef","_s","nodeTypes","custom","enrichedNodes","map","n","_n$data","type","styledEdges","e","animated","stroke","strokeWidth","handleNodeClick","evt","node","className","fitView","fitViewOptions","onInit","inst","current","_c2","$RefreshReg$"],"sources":["C:/Users/abhis/OneDrive/Desktop/JSON TREE VISUALIZER/json-tree-visualizer/src/components/FlowTree.jsx"],"sourcesContent":["import React, { useMemo, useCallback } from \"react\";\nimport ReactFlow, { Background } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\n\nconst getNodeColor = (value) => {\n  if (value === null) return \"#f59e0b\";\n  if (Array.isArray(value)) return \"#10b981\";\n  if (typeof value === \"object\") return \"#6366f1\";\n  return \"#3b82f6\";\n};\n\nconst CustomNode = ({ data }) => (\n  <div style={{ padding: 8, borderRadius: 8, background: data.bg, color: \"#fff\", textAlign: \"center\", minWidth: 100 }}>\n    {data.label}\n  </div>\n);\n\nexport default function FlowTree({ nodes, edges, onNodeClick, rfInstanceRef }) {\n  const nodeTypes = useMemo(() => ({ custom: CustomNode }), []);\n\n  const enrichedNodes = nodes.map(n => ({ ...n, type: \"custom\", data: { ...n.data, bg: getNodeColor(n.data?.value) } }));\n\n  const styledEdges = edges.map((e) => ({\n    ...e,\n    type: \"smoothstep\",\n    animated: false,\n    style: { stroke: \"#4f46e5\", strokeWidth: 2 },\n  }));\n\n  const handleNodeClick = useCallback((evt, node) => onNodeClick?.(evt, node), [onNodeClick]);\n\n  return (\n    <div className=\"h-full w-full\">\n      <ReactFlow\n        nodes={enrichedNodes}\n        edges={styledEdges}\n        nodeTypes={nodeTypes}\n        onNodeClick={handleNodeClick}\n        fitView\n        fitViewOptions={{ padding: 0.3 }}\n        onInit={(inst) => { if (rfInstanceRef) rfInstanceRef.current = inst; }}\n      >\n        <Background />\n      </ReactFlow>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}