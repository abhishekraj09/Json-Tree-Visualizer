{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\OneDrive\\\\Desktop\\\\JSON TREE VISUALIZER\\\\json-tree-visualizer\\\\src\\\\components\\\\FlowTree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useMemo } from \"react\";\nimport ReactFlow, { Background, Controls, MiniMap } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getNodeColor = value => {\n  if (value === null) return \"#ffb74d\"; // null → amber\n  if (Array.isArray(value)) return \"#43a047\"; // arrays → green\n  if (typeof value === \"object\") return \"#6a1b9a\"; // objects → purple\n  return \"#fb8c00\"; // primitives → orange\n};\nconst CustomNode = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    padding: 8,\n    borderRadius: 8,\n    background: data.bg,\n    color: \"#fff\",\n    textAlign: \"center\",\n    minWidth: 90,\n    cursor: \"pointer\"\n  },\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontWeight: 700\n    },\n    children: data.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 13,\n  columnNumber: 3\n}, this);\n_c = CustomNode;\nfunction FlowTree({\n  nodes,\n  edges,\n  onNodeClick,\n  rfInstanceRef\n}) {\n  _s();\n  const nodeTypes = useMemo(() => ({\n    custom: CustomNode\n  }), []);\n  const enriched = nodes.map(n => {\n    var _n$data;\n    const val = (_n$data = n.data) === null || _n$data === void 0 ? void 0 : _n$data.value;\n    return {\n      ...n,\n      type: \"custom\",\n      data: {\n        ...n.data,\n        bg: getNodeColor(val)\n      }\n    };\n  });\n  const handleNodeClick = useCallback((evt, node) => {\n    onNodeClick(evt, node);\n  }, [onNodeClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full w-full\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: enriched,\n      edges: edges.map(e => ({\n        ...e,\n        type: \"smoothstep\",\n        animated: true,\n        style: {\n          strokeWidth: 2,\n          stroke: \"#8884d8\"\n        }\n      })),\n      nodeTypes: nodeTypes,\n      onNodeClick: handleNodeClick,\n      fitView: true,\n      fitViewOptions: {\n        padding: 0.4\n      },\n      onInit: instance => {\n        if (rfInstanceRef) rfInstanceRef.current = instance;\n      },\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n_s(FlowTree, \"5qpv3sEECEkNYhXGQijKFS72lt8=\");\n_c2 = FlowTree;\nexport default FlowTree;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomNode\");\n$RefreshReg$(_c2, \"FlowTree\");","map":{"version":3,"names":["React","useCallback","useMemo","ReactFlow","Background","Controls","MiniMap","jsxDEV","_jsxDEV","getNodeColor","value","Array","isArray","CustomNode","data","style","padding","borderRadius","background","bg","color","textAlign","minWidth","cursor","children","fontWeight","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","FlowTree","nodes","edges","onNodeClick","rfInstanceRef","_s","nodeTypes","custom","enriched","map","n","_n$data","val","type","handleNodeClick","evt","node","className","e","animated","strokeWidth","stroke","fitView","fitViewOptions","onInit","instance","current","_c2","$RefreshReg$"],"sources":["C:/Users/abhis/OneDrive/Desktop/JSON TREE VISUALIZER/json-tree-visualizer/src/components/FlowTree.jsx"],"sourcesContent":["import React, { useCallback, useMemo } from \"react\";\nimport ReactFlow, { Background, Controls, MiniMap } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\n\nconst getNodeColor = (value) => {\n  if (value === null) return \"#ffb74d\";       // null → amber\n  if (Array.isArray(value)) return \"#43a047\"; // arrays → green\n  if (typeof value === \"object\") return \"#6a1b9a\"; // objects → purple\n  return \"#fb8c00\";                           // primitives → orange\n};\n\nconst CustomNode = ({ data }) => (\n  <div\n    style={{\n      padding: 8,\n      borderRadius: 8,\n      background: data.bg,\n      color: \"#fff\",\n      textAlign: \"center\",\n      minWidth: 90,\n      cursor: \"pointer\",\n    }}\n  >\n    <div style={{ fontWeight: 700 }}>{data.label}</div>\n  </div>\n);\n\nfunction FlowTree({ nodes, edges, onNodeClick, rfInstanceRef }) {\n  const nodeTypes = useMemo(() => ({ custom: CustomNode }), []);\n\n  const enriched = nodes.map((n) => {\n    const val = n.data?.value;\n    return { ...n, type: \"custom\", data: { ...n.data, bg: getNodeColor(val) } };\n  });\n\n  const handleNodeClick = useCallback(\n    (evt, node) => {\n      onNodeClick(evt, node);\n    },\n    [onNodeClick]\n  );\n\n  return (\n    <div className=\"h-full w-full\">\n      <ReactFlow\n        nodes={enriched}\n        edges={edges.map((e) => ({\n          ...e,\n          type: \"smoothstep\",\n          animated: true,\n          style: { strokeWidth: 2, stroke: \"#8884d8\" },\n        }))}\n        nodeTypes={nodeTypes}\n        onNodeClick={handleNodeClick}\n        fitView\n        fitViewOptions={{ padding: 0.4 }}\n        onInit={(instance) => {\n          if (rfInstanceRef) rfInstanceRef.current = instance;\n        }}\n      >\n        <Background />\n        <MiniMap />\n        <Controls />\n      </ReactFlow>\n    </div>\n  );\n}\n\nexport default FlowTree;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}