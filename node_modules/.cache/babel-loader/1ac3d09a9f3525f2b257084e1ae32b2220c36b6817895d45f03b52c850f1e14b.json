{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\OneDrive\\\\Desktop\\\\JSON TREE VISUALIZER\\\\json-tree-visualizer\\\\src\\\\components\\\\FlowTree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo } from \"react\";\nimport ReactFlow, { Background, MiniMap } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CustomNode = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    padding: 8,\n    borderRadius: 8,\n    background: \"#4f46e5\",\n    color: \"#fff\",\n    textAlign: \"center\",\n    minWidth: 90\n  },\n  children: /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontWeight: 600\n    },\n    children: data.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 6,\n  columnNumber: 3\n}, this);\n_c = CustomNode;\nexport default function FlowTree({\n  nodes,\n  edges\n}) {\n  _s();\n  const nodeTypes = useMemo(() => ({\n    custom: CustomNode\n  }), []);\n  const enrichedNodes = nodes.map(n => ({\n    ...n,\n    type: \"custom\"\n  }));\n  const styledEdges = edges.map(e => ({\n    ...e,\n    animated: true,\n    style: {\n      stroke: \"#4f46e5\",\n      strokeWidth: 2\n    },\n    type: \"smoothstep\"\n  }));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full w-full\",\n    style: {\n      height: \"80vh\",\n      width: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: enrichedNodes,\n      edges: styledEdges,\n      nodeTypes: nodeTypes,\n      fitView: true,\n      fitViewOptions: {\n        padding: 0.3\n      },\n      children: [/*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_s(FlowTree, \"wpBs7NDLRMGljAafvuBbRYfDyDo=\");\n_c2 = FlowTree;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomNode\");\n$RefreshReg$(_c2, \"FlowTree\");","map":{"version":3,"names":["React","useMemo","ReactFlow","Background","MiniMap","jsxDEV","_jsxDEV","CustomNode","data","style","padding","borderRadius","background","color","textAlign","minWidth","children","fontWeight","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","FlowTree","nodes","edges","_s","nodeTypes","custom","enrichedNodes","map","n","type","styledEdges","e","animated","stroke","strokeWidth","className","height","width","fitView","fitViewOptions","_c2","$RefreshReg$"],"sources":["C:/Users/abhis/OneDrive/Desktop/JSON TREE VISUALIZER/json-tree-visualizer/src/components/FlowTree.jsx"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport ReactFlow, { Background, MiniMap } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\n\nconst CustomNode = ({ data }) => (\n  <div\n    style={{\n      padding: 8,\n      borderRadius: 8,\n      background: \"#4f46e5\",\n      color: \"#fff\",\n      textAlign: \"center\",\n      minWidth: 90,\n    }}\n  >\n    <div style={{ fontWeight: 600 }}>{data.label}</div>\n  </div>\n);\n\nexport default function FlowTree({ nodes, edges }) {\n  const nodeTypes = useMemo(() => ({ custom: CustomNode }), []);\n\n  const enrichedNodes = nodes.map((n) => ({\n    ...n,\n    type: \"custom\",\n  }));\n\n  const styledEdges = edges.map((e) => ({\n    ...e,\n    animated: true,\n    style: { stroke: \"#4f46e5\", strokeWidth: 2 },\n    type: \"smoothstep\",\n  }));\n\n  return (\n    <div className=\"h-full w-full\" style={{ height: \"80vh\", width: \"100%\" }}>\n      <ReactFlow\n        nodes={enrichedNodes}\n        edges={styledEdges}\n        nodeTypes={nodeTypes}\n        fitView\n        fitViewOptions={{ padding: 0.3 }}\n      >\n        <Background />\n        <MiniMap />\n        {/* ðŸ‘‡ Controls removed completely */}\n      </ReactFlow>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,OAAO,QAAQ,OAAO;AACtC,OAAOC,SAAS,IAAIC,UAAU,EAAEC,OAAO,QAAQ,WAAW;AAC1D,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,MAAMC,UAAU,GAAGA,CAAC;EAAEC;AAAK,CAAC,kBAC1BF,OAAA;EACEG,KAAK,EAAE;IACLC,OAAO,EAAE,CAAC;IACVC,YAAY,EAAE,CAAC;IACfC,UAAU,EAAE,SAAS;IACrBC,KAAK,EAAE,MAAM;IACbC,SAAS,EAAE,QAAQ;IACnBC,QAAQ,EAAE;EACZ,CAAE;EAAAC,QAAA,eAEFV,OAAA;IAAKG,KAAK,EAAE;MAAEQ,UAAU,EAAE;IAAI,CAAE;IAAAD,QAAA,EAAER,IAAI,CAACU;EAAK;IAAAC,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAAM;AAAC;EAAAH,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OAChD,CACN;AAACC,EAAA,GAbIhB,UAAU;AAehB,eAAe,SAASiB,QAAQA,CAAC;EAAEC,KAAK;EAAEC;AAAM,CAAC,EAAE;EAAAC,EAAA;EACjD,MAAMC,SAAS,GAAG3B,OAAO,CAAC,OAAO;IAAE4B,MAAM,EAAEtB;EAAW,CAAC,CAAC,EAAE,EAAE,CAAC;EAE7D,MAAMuB,aAAa,GAAGL,KAAK,CAACM,GAAG,CAAEC,CAAC,KAAM;IACtC,GAAGA,CAAC;IACJC,IAAI,EAAE;EACR,CAAC,CAAC,CAAC;EAEH,MAAMC,WAAW,GAAGR,KAAK,CAACK,GAAG,CAAEI,CAAC,KAAM;IACpC,GAAGA,CAAC;IACJC,QAAQ,EAAE,IAAI;IACd3B,KAAK,EAAE;MAAE4B,MAAM,EAAE,SAAS;MAAEC,WAAW,EAAE;IAAE,CAAC;IAC5CL,IAAI,EAAE;EACR,CAAC,CAAC,CAAC;EAEH,oBACE3B,OAAA;IAAKiC,SAAS,EAAC,eAAe;IAAC9B,KAAK,EAAE;MAAE+B,MAAM,EAAE,MAAM;MAAEC,KAAK,EAAE;IAAO,CAAE;IAAAzB,QAAA,eACtEV,OAAA,CAACJ,SAAS;MACRuB,KAAK,EAAEK,aAAc;MACrBJ,KAAK,EAAEQ,WAAY;MACnBN,SAAS,EAAEA,SAAU;MACrBc,OAAO;MACPC,cAAc,EAAE;QAAEjC,OAAO,EAAE;MAAI,CAAE;MAAAM,QAAA,gBAEjCV,OAAA,CAACH,UAAU;QAAAgB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACdhB,OAAA,CAACF,OAAO;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAEF;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAACK,EAAA,CA9BuBH,QAAQ;AAAAoB,GAAA,GAARpB,QAAQ;AAAA,IAAAD,EAAA,EAAAqB,GAAA;AAAAC,YAAA,CAAAtB,EAAA;AAAAsB,YAAA,CAAAD,GAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}