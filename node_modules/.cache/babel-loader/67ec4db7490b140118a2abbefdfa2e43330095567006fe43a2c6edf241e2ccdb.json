{"ast":null,"code":"export function jsonToFlow(rootObj) {\n  let nodes = [];\n  let edges = [];\n  let counter = 0;\n\n  // Make sure IDs contain only safe characters\n  function safeId(path) {\n    return path.replace(/[^a-zA-Z0-9_]/g, \"_\");\n  }\n  function visit(value, path = \"root\", depth = 0, label = null, parent = null) {\n    const id = safeId(path);\n    const nodeLabel = label === null ? \"root\" : String(label);\n    const raw = typeof value === \"object\" && value !== null ? JSON.stringify(value) : String(value);\n    const position = {\n      x: depth * 240,\n      y: counter * 90\n    };\n    counter += 1;\n    nodes.push({\n      id,\n      position,\n      data: {\n        label: nodeLabel,\n        raw,\n        path,\n        value\n      }\n    });\n\n    // ðŸ”¹ Create edge only if parent exists\n    if (parent) {\n      const safeParent = safeId(parent);\n      edges.push({\n        id: `e-${safeParent}-${id}`,\n        source: safeParent,\n        target: id\n      });\n    }\n\n    // ðŸ”¹ Visit children\n    if (value && typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach((item, idx) => visit(item, `${path}_${idx}`, depth + 1, `[${idx}]`, path));\n      } else {\n        Object.keys(value).forEach(key => visit(value[key], `${path}_${key}`, depth + 1, key, path));\n      }\n    }\n  }\n  visit(rootObj);\n  return {\n    nodes,\n    edges\n  };\n}","map":{"version":3,"names":["jsonToFlow","rootObj","nodes","edges","counter","safeId","path","replace","visit","value","depth","label","parent","id","nodeLabel","String","raw","JSON","stringify","position","x","y","push","data","safeParent","source","target","Array","isArray","forEach","item","idx","Object","keys","key"],"sources":["C:/Users/abhis/OneDrive/Desktop/JSON TREE VISUALIZER/json-tree-visualizer/src/utils/jsonToFlow.js"],"sourcesContent":["export function jsonToFlow(rootObj) {\n  let nodes = [];\n  let edges = [];\n  let counter = 0;\n\n  // Make sure IDs contain only safe characters\n  function safeId(path) {\n    return path.replace(/[^a-zA-Z0-9_]/g, \"_\");\n  }\n\n  function visit(value, path = \"root\", depth = 0, label = null, parent = null) {\n    const id = safeId(path);\n    const nodeLabel = label === null ? \"root\" : String(label);\n    const raw =\n      typeof value === \"object\" && value !== null\n        ? JSON.stringify(value)\n        : String(value);\n    const position = { x: depth * 240, y: counter * 90 };\n    counter += 1;\n\n    nodes.push({\n      id,\n      position,\n      data: { label: nodeLabel, raw, path, value },\n    });\n\n    // ðŸ”¹ Create edge only if parent exists\n    if (parent) {\n      const safeParent = safeId(parent);\n      edges.push({\n        id: `e-${safeParent}-${id}`,\n        source: safeParent,\n        target: id,\n      });\n    }\n\n    // ðŸ”¹ Visit children\n    if (value && typeof value === \"object\") {\n      if (Array.isArray(value)) {\n        value.forEach((item, idx) =>\n          visit(item, `${path}_${idx}`, depth + 1, `[${idx}]`, path)\n        );\n      } else {\n        Object.keys(value).forEach((key) =>\n          visit(value[key], `${path}_${key}`, depth + 1, key, path)\n        );\n      }\n    }\n  }\n\n  visit(rootObj);\n  return { nodes, edges };\n}\n"],"mappings":"AAAA,OAAO,SAASA,UAAUA,CAACC,OAAO,EAAE;EAClC,IAAIC,KAAK,GAAG,EAAE;EACd,IAAIC,KAAK,GAAG,EAAE;EACd,IAAIC,OAAO,GAAG,CAAC;;EAEf;EACA,SAASC,MAAMA,CAACC,IAAI,EAAE;IACpB,OAAOA,IAAI,CAACC,OAAO,CAAC,gBAAgB,EAAE,GAAG,CAAC;EAC5C;EAEA,SAASC,KAAKA,CAACC,KAAK,EAAEH,IAAI,GAAG,MAAM,EAAEI,KAAK,GAAG,CAAC,EAAEC,KAAK,GAAG,IAAI,EAAEC,MAAM,GAAG,IAAI,EAAE;IAC3E,MAAMC,EAAE,GAAGR,MAAM,CAACC,IAAI,CAAC;IACvB,MAAMQ,SAAS,GAAGH,KAAK,KAAK,IAAI,GAAG,MAAM,GAAGI,MAAM,CAACJ,KAAK,CAAC;IACzD,MAAMK,GAAG,GACP,OAAOP,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,GACvCQ,IAAI,CAACC,SAAS,CAACT,KAAK,CAAC,GACrBM,MAAM,CAACN,KAAK,CAAC;IACnB,MAAMU,QAAQ,GAAG;MAAEC,CAAC,EAAEV,KAAK,GAAG,GAAG;MAAEW,CAAC,EAAEjB,OAAO,GAAG;IAAG,CAAC;IACpDA,OAAO,IAAI,CAAC;IAEZF,KAAK,CAACoB,IAAI,CAAC;MACTT,EAAE;MACFM,QAAQ;MACRI,IAAI,EAAE;QAAEZ,KAAK,EAAEG,SAAS;QAAEE,GAAG;QAAEV,IAAI;QAAEG;MAAM;IAC7C,CAAC,CAAC;;IAEF;IACA,IAAIG,MAAM,EAAE;MACV,MAAMY,UAAU,GAAGnB,MAAM,CAACO,MAAM,CAAC;MACjCT,KAAK,CAACmB,IAAI,CAAC;QACTT,EAAE,EAAE,KAAKW,UAAU,IAAIX,EAAE,EAAE;QAC3BY,MAAM,EAAED,UAAU;QAClBE,MAAM,EAAEb;MACV,CAAC,CAAC;IACJ;;IAEA;IACA,IAAIJ,KAAK,IAAI,OAAOA,KAAK,KAAK,QAAQ,EAAE;MACtC,IAAIkB,KAAK,CAACC,OAAO,CAACnB,KAAK,CAAC,EAAE;QACxBA,KAAK,CAACoB,OAAO,CAAC,CAACC,IAAI,EAAEC,GAAG,KACtBvB,KAAK,CAACsB,IAAI,EAAE,GAAGxB,IAAI,IAAIyB,GAAG,EAAE,EAAErB,KAAK,GAAG,CAAC,EAAE,IAAIqB,GAAG,GAAG,EAAEzB,IAAI,CAC3D,CAAC;MACH,CAAC,MAAM;QACL0B,MAAM,CAACC,IAAI,CAACxB,KAAK,CAAC,CAACoB,OAAO,CAAEK,GAAG,IAC7B1B,KAAK,CAACC,KAAK,CAACyB,GAAG,CAAC,EAAE,GAAG5B,IAAI,IAAI4B,GAAG,EAAE,EAAExB,KAAK,GAAG,CAAC,EAAEwB,GAAG,EAAE5B,IAAI,CAC1D,CAAC;MACH;IACF;EACF;EAEAE,KAAK,CAACP,OAAO,CAAC;EACd,OAAO;IAAEC,KAAK;IAAEC;EAAM,CAAC;AACzB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}