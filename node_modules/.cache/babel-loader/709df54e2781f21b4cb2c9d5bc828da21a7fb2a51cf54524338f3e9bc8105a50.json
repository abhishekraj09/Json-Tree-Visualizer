{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\OneDrive\\\\Desktop\\\\JSON TREE VISUALIZER\\\\json-tree-visualizer\\\\src\\\\components\\\\FlowTree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback, useMemo } from \"react\";\nimport ReactFlow, { Background, Controls, MiniMap, Handle } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\n\n// Node color by type\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getNodeColor = value => {\n  if (value === null) return \"#ffb74d\"; // null → orange\n  if (Array.isArray(value)) return \"#4caf50\"; // array → green\n  if (typeof value === \"object\") return \"#7e57c2\"; // object → purple\n  return \"#fb8c00\"; // primitive → amber\n};\n\n// ✅ Custom Node (with handles so edges render)\nconst CustomNode = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  className: \"group relative\",\n  style: {\n    padding: 10,\n    borderRadius: 8,\n    backgroundColor: data.bg,\n    color: \"#fff\",\n    fontSize: 13,\n    textAlign: \"center\",\n    minWidth: 120,\n    cursor: \"pointer\",\n    boxShadow: \"0 3px 6px rgba(0,0,0,0.25)\"\n  },\n  children: [/*#__PURE__*/_jsxDEV(Handle, {\n    type: \"target\",\n    position: \"top\",\n    style: {\n      background: \"#fff\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      fontWeight: 600\n    },\n    children: data.label\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"absolute hidden group-hover:block bg-black text-white text-xs rounded px-2 py-1\",\n    style: {\n      top: \"110%\",\n      left: \"50%\",\n      transform: \"translateX(-50%)\",\n      whiteSpace: \"nowrap\",\n      zIndex: 20,\n      maxWidth: 250,\n      overflow: \"hidden\",\n      textOverflow: \"ellipsis\"\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Path:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), \" \", data.path]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n        children: \"Value:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), \" \", typeof data.value === \"object\" ? JSON.stringify(data.value) : String(data.value)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this), /*#__PURE__*/_jsxDEV(Handle, {\n    type: \"source\",\n    position: \"bottom\",\n    style: {\n      background: \"#fff\"\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this)]\n}, void 0, true, {\n  fileName: _jsxFileName,\n  lineNumber: 20,\n  columnNumber: 3\n}, this);\n_c = CustomNode;\nexport default function FlowTree({\n  nodes,\n  edges,\n  onNodeClick\n}) {\n  _s();\n  const nodeTypes = useMemo(() => ({\n    custom: CustomNode\n  }), []);\n\n  // Assign custom colors\n  const formattedNodes = useMemo(() => nodes.map(n => {\n    var _n$data;\n    return {\n      ...n,\n      type: \"custom\",\n      data: {\n        ...n.data,\n        bg: getNodeColor((_n$data = n.data) === null || _n$data === void 0 ? void 0 : _n$data.value)\n      }\n    };\n  }), [nodes]);\n  const handleNodeClick = useCallback((evt, node) => {\n    if (onNodeClick) onNodeClick(evt, node);\n  }, [onNodeClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full w-full\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: formattedNodes,\n      edges: edges,\n      nodeTypes: nodeTypes,\n      onNodeClick: handleNodeClick,\n      fitView: true,\n      connectionLineType: \"smoothstep\",\n      children: [/*#__PURE__*/_jsxDEV(Background, {\n        color: \"#aaa\",\n        gap: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeColor: n => {\n          var _n$data2;\n          return ((_n$data2 = n.data) === null || _n$data2 === void 0 ? void 0 : _n$data2.bg) || \"#ccc\";\n        },\n        nodeStrokeColor: \"#333\",\n        nodeBorderRadius: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {\n        showZoom: false,\n        showFitView: false\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n_s(FlowTree, \"Gp1s73+WlAXsupqAApSEaT9tZh0=\");\n_c2 = FlowTree;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomNode\");\n$RefreshReg$(_c2, \"FlowTree\");","map":{"version":3,"names":["React","useCallback","useMemo","ReactFlow","Background","Controls","MiniMap","Handle","jsxDEV","_jsxDEV","getNodeColor","value","Array","isArray","CustomNode","data","className","style","padding","borderRadius","backgroundColor","bg","color","fontSize","textAlign","minWidth","cursor","boxShadow","children","type","position","background","fileName","_jsxFileName","lineNumber","columnNumber","fontWeight","label","top","left","transform","whiteSpace","zIndex","maxWidth","overflow","textOverflow","path","JSON","stringify","String","_c","FlowTree","nodes","edges","onNodeClick","_s","nodeTypes","custom","formattedNodes","map","n","_n$data","handleNodeClick","evt","node","fitView","connectionLineType","gap","nodeColor","_n$data2","nodeStrokeColor","nodeBorderRadius","showZoom","showFitView","_c2","$RefreshReg$"],"sources":["C:/Users/abhis/OneDrive/Desktop/JSON TREE VISUALIZER/json-tree-visualizer/src/components/FlowTree.jsx"],"sourcesContent":["import React, { useCallback, useMemo } from \"react\";\nimport ReactFlow, {\n  Background,\n  Controls,\n  MiniMap,\n  Handle,\n} from \"reactflow\";\nimport \"reactflow/dist/style.css\";\n\n// Node color by type\nconst getNodeColor = (value) => {\n  if (value === null) return \"#ffb74d\"; // null → orange\n  if (Array.isArray(value)) return \"#4caf50\"; // array → green\n  if (typeof value === \"object\") return \"#7e57c2\"; // object → purple\n  return \"#fb8c00\"; // primitive → amber\n};\n\n// ✅ Custom Node (with handles so edges render)\nconst CustomNode = ({ data }) => (\n  <div\n    className=\"group relative\"\n    style={{\n      padding: 10,\n      borderRadius: 8,\n      backgroundColor: data.bg,\n      color: \"#fff\",\n      fontSize: 13,\n      textAlign: \"center\",\n      minWidth: 120,\n      cursor: \"pointer\",\n      boxShadow: \"0 3px 6px rgba(0,0,0,0.25)\",\n    }}\n  >\n    {/* Top handle for incoming edge */}\n    <Handle type=\"target\" position=\"top\" style={{ background: \"#fff\" }} />\n\n    <div style={{ fontWeight: 600 }}>{data.label}</div>\n\n    {/* Tooltip on hover */}\n    <div\n      className=\"absolute hidden group-hover:block bg-black text-white text-xs rounded px-2 py-1\"\n      style={{\n        top: \"110%\",\n        left: \"50%\",\n        transform: \"translateX(-50%)\",\n        whiteSpace: \"nowrap\",\n        zIndex: 20,\n        maxWidth: 250,\n        overflow: \"hidden\",\n        textOverflow: \"ellipsis\",\n      }}\n    >\n      <div>\n        <strong>Path:</strong> {data.path}\n      </div>\n      <div>\n        <strong>Value:</strong>{\" \"}\n        {typeof data.value === \"object\"\n          ? JSON.stringify(data.value)\n          : String(data.value)}\n      </div>\n    </div>\n\n    {/* Bottom handle for outgoing edge */}\n    <Handle type=\"source\" position=\"bottom\" style={{ background: \"#fff\" }} />\n  </div>\n);\n\nexport default function FlowTree({ nodes, edges, onNodeClick }) {\n  const nodeTypes = useMemo(() => ({ custom: CustomNode }), []);\n\n  // Assign custom colors\n  const formattedNodes = useMemo(\n    () =>\n      nodes.map((n) => ({\n        ...n,\n        type: \"custom\",\n        data: { ...n.data, bg: getNodeColor(n.data?.value) },\n      })),\n    [nodes]\n  );\n\n  const handleNodeClick = useCallback(\n    (evt, node) => {\n      if (onNodeClick) onNodeClick(evt, node);\n    },\n    [onNodeClick]\n  );\n\n  return (\n    <div className=\"h-full w-full\">\n      <ReactFlow\n        nodes={formattedNodes}\n        edges={edges}\n        nodeTypes={nodeTypes}\n        onNodeClick={handleNodeClick}\n        fitView\n        connectionLineType=\"smoothstep\"\n      >\n        <Background color=\"#aaa\" gap={16} />\n        <MiniMap\n          nodeColor={(n) => n.data?.bg || \"#ccc\"}\n          nodeStrokeColor=\"#333\"\n          nodeBorderRadius={2}\n        />\n        {/* ✅ Removed zoom + fit buttons */}\n        <Controls showZoom={false} showFitView={false} />\n      </ReactFlow>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}