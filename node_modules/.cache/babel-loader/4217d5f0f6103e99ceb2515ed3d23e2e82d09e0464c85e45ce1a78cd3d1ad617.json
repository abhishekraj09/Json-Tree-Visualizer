{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\OneDrive\\\\Desktop\\\\JSON TREE VISUALIZER\\\\json-tree-visualizer\\\\src\\\\components\\\\FlowTree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useCallback } from \"react\";\nimport ReactFlow, { MiniMap, Controls, Background, Handle, Position } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function FlowTree({\n  nodes,\n  edges,\n  onNodeClick\n}) {\n  _s();\n  const nodeTypes = {\n    customNode: ({\n      data\n    }) => /*#__PURE__*/_jsxDEV(\"div\", {\n      title: `Path: ${data.path}\\nValue: ${JSON.stringify(data.value, null, 2)}`,\n      className: \"px-3 py-2 rounded-lg text-sm font-medium shadow-md border transition-all duration-300\",\n      style: {\n        backgroundColor: getNodeColor(data.value),\n        color: \"#fff\",\n        border: \"1px solid #ccc\",\n        cursor: \"pointer\",\n        transform: \"scale(1)\"\n      },\n      onMouseEnter: e => e.currentTarget.style.transform = \"scale(1.05)\",\n      onMouseLeave: e => e.currentTarget.style.transform = \"scale(1)\",\n      children: data.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 7\n    }, this)\n  };\n  const getNodeColor = value => {\n    if (Array.isArray(value)) return \"#4ade80\"; // green for arrays\n    if (typeof value === \"object\" && value !== null) return \"#6366f1\"; // blue/purple for objects\n    return \"#f59e0b\"; // yellow/orange for primitives\n  };\n  const onInit = useCallback(instance => instance.fitView(), []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      width: \"100%\",\n      height: \"100%\"\n    },\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: nodes.map(n => ({\n        ...n,\n        type: \"customNode\"\n      })),\n      edges: edges,\n      nodeTypes: nodeTypes,\n      onNodeClick: onNodeClick,\n      fitView: true,\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {\n        nodeColor: n => getNodeColor(n.data.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {\n        color: \"#aaa\",\n        gap: 16\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(FlowTree, \"gTyUwRVs4VID9oWeJeOy7AVxZ/k=\");\n_c = FlowTree;\nvar _c;\n$RefreshReg$(_c, \"FlowTree\");","map":{"version":3,"names":["React","useCallback","ReactFlow","MiniMap","Controls","Background","Handle","Position","jsxDEV","_jsxDEV","FlowTree","nodes","edges","onNodeClick","_s","nodeTypes","customNode","data","title","path","JSON","stringify","value","className","style","backgroundColor","getNodeColor","color","border","cursor","transform","onMouseEnter","e","currentTarget","onMouseLeave","children","label","fileName","_jsxFileName","lineNumber","columnNumber","Array","isArray","onInit","instance","fitView","width","height","map","n","type","nodeColor","gap","_c","$RefreshReg$"],"sources":["C:/Users/abhis/OneDrive/Desktop/JSON TREE VISUALIZER/json-tree-visualizer/src/components/FlowTree.jsx"],"sourcesContent":["import React, { useCallback } from \"react\";\nimport ReactFlow, {\n  MiniMap,\n  Controls,\n  Background,\n  Handle,\n  Position,\n} from \"reactflow\";\nimport \"reactflow/dist/style.css\";\n\nexport default function FlowTree({ nodes, edges, onNodeClick }) {\n  const nodeTypes = {\n    customNode: ({ data }) => (\n      <div\n        title={`Path: ${data.path}\\nValue: ${JSON.stringify(data.value, null, 2)}`}\n        className=\"px-3 py-2 rounded-lg text-sm font-medium shadow-md border transition-all duration-300\"\n        style={{\n          backgroundColor: getNodeColor(data.value),\n          color: \"#fff\",\n          border: \"1px solid #ccc\",\n          cursor: \"pointer\",\n          transform: \"scale(1)\",\n        }}\n        onMouseEnter={(e) => (e.currentTarget.style.transform = \"scale(1.05)\")}\n        onMouseLeave={(e) => (e.currentTarget.style.transform = \"scale(1)\")}\n      >\n        {data.label}\n      </div>\n    ),\n  };\n\n  const getNodeColor = (value) => {\n    if (Array.isArray(value)) return \"#4ade80\"; // green for arrays\n    if (typeof value === \"object\" && value !== null) return \"#6366f1\"; // blue/purple for objects\n    return \"#f59e0b\"; // yellow/orange for primitives\n  };\n\n  const onInit = useCallback((instance) => instance.fitView(), []);\n\n  return (\n    <div style={{ width: \"100%\", height: \"100%\" }}>\n      <ReactFlow\n        nodes={nodes.map((n) => ({ ...n, type: \"customNode\" }))}\n        edges={edges}\n        nodeTypes={nodeTypes}\n        onNodeClick={onNodeClick}\n        fitView\n      >\n        <MiniMap nodeColor={(n) => getNodeColor(n.data.value)} />\n        <Background color=\"#aaa\" gap={16} />\n      </ReactFlow>\n    </div>\n  );\n}\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,WAAW,QAAQ,OAAO;AAC1C,OAAOC,SAAS,IACdC,OAAO,EACPC,QAAQ,EACRC,UAAU,EACVC,MAAM,EACNC,QAAQ,QACH,WAAW;AAClB,OAAO,0BAA0B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElC,eAAe,SAASC,QAAQA,CAAC;EAAEC,KAAK;EAAEC,KAAK;EAAEC;AAAY,CAAC,EAAE;EAAAC,EAAA;EAC9D,MAAMC,SAAS,GAAG;IAChBC,UAAU,EAAEA,CAAC;MAAEC;IAAK,CAAC,kBACnBR,OAAA;MACES,KAAK,EAAE,SAASD,IAAI,CAACE,IAAI,YAAYC,IAAI,CAACC,SAAS,CAACJ,IAAI,CAACK,KAAK,EAAE,IAAI,EAAE,CAAC,CAAC,EAAG;MAC3EC,SAAS,EAAC,uFAAuF;MACjGC,KAAK,EAAE;QACLC,eAAe,EAAEC,YAAY,CAACT,IAAI,CAACK,KAAK,CAAC;QACzCK,KAAK,EAAE,MAAM;QACbC,MAAM,EAAE,gBAAgB;QACxBC,MAAM,EAAE,SAAS;QACjBC,SAAS,EAAE;MACb,CAAE;MACFC,YAAY,EAAGC,CAAC,IAAMA,CAAC,CAACC,aAAa,CAACT,KAAK,CAACM,SAAS,GAAG,aAAe;MACvEI,YAAY,EAAGF,CAAC,IAAMA,CAAC,CAACC,aAAa,CAACT,KAAK,CAACM,SAAS,GAAG,UAAY;MAAAK,QAAA,EAEnElB,IAAI,CAACmB;IAAK;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACR;EAET,CAAC;EAED,MAAMd,YAAY,GAAIJ,KAAK,IAAK;IAC9B,IAAImB,KAAK,CAACC,OAAO,CAACpB,KAAK,CAAC,EAAE,OAAO,SAAS,CAAC,CAAC;IAC5C,IAAI,OAAOA,KAAK,KAAK,QAAQ,IAAIA,KAAK,KAAK,IAAI,EAAE,OAAO,SAAS,CAAC,CAAC;IACnE,OAAO,SAAS,CAAC,CAAC;EACpB,CAAC;EAED,MAAMqB,MAAM,GAAG1C,WAAW,CAAE2C,QAAQ,IAAKA,QAAQ,CAACC,OAAO,CAAC,CAAC,EAAE,EAAE,CAAC;EAEhE,oBACEpC,OAAA;IAAKe,KAAK,EAAE;MAAEsB,KAAK,EAAE,MAAM;MAAEC,MAAM,EAAE;IAAO,CAAE;IAAAZ,QAAA,eAC5C1B,OAAA,CAACP,SAAS;MACRS,KAAK,EAAEA,KAAK,CAACqC,GAAG,CAAEC,CAAC,KAAM;QAAE,GAAGA,CAAC;QAAEC,IAAI,EAAE;MAAa,CAAC,CAAC,CAAE;MACxDtC,KAAK,EAAEA,KAAM;MACbG,SAAS,EAAEA,SAAU;MACrBF,WAAW,EAAEA,WAAY;MACzBgC,OAAO;MAAAV,QAAA,gBAEP1B,OAAA,CAACN,OAAO;QAACgD,SAAS,EAAGF,CAAC,IAAKvB,YAAY,CAACuB,CAAC,CAAChC,IAAI,CAACK,KAAK;MAAE;QAAAe,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzD/B,OAAA,CAACJ,UAAU;QAACsB,KAAK,EAAC,MAAM;QAACyB,GAAG,EAAE;MAAG;QAAAf,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3B;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACT,CAAC;AAEV;AAAC1B,EAAA,CA3CuBJ,QAAQ;AAAA2C,EAAA,GAAR3C,QAAQ;AAAA,IAAA2C,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}