{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\abhis\\\\OneDrive\\\\Desktop\\\\JSON TREE VISUALIZER\\\\json-tree-visualizer\\\\src\\\\components\\\\FlowTree.jsx\",\n  _s = $RefreshSig$();\nimport React, { useMemo, useCallback } from \"react\";\nimport ReactFlow, { Background, Controls, MiniMap, MarkerType } from \"reactflow\";\nimport \"reactflow/dist/style.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst getNodeColor = value => {\n  if (value === null) return \"#ffb74d\";\n  if (Array.isArray(value)) return \"#43a047\";\n  if (typeof value === \"object\") return \"#6a1b9a\";\n  return \"#fb8c00\";\n};\nconst CustomNode = ({\n  data\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  style: {\n    padding: 8,\n    borderRadius: 8,\n    background: data.bg,\n    color: \"#fff\",\n    textAlign: \"center\",\n    minWidth: 100,\n    cursor: \"pointer\",\n    fontWeight: 600,\n    boxShadow: \"0 2px 6px rgba(0,0,0,0.2)\"\n  },\n  children: data.label\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 18,\n  columnNumber: 3\n}, this);\n_c = CustomNode;\nexport default function FlowTree({\n  nodes,\n  edges,\n  onNodeClick\n}) {\n  _s();\n  const nodeTypes = useMemo(() => ({\n    custom: CustomNode\n  }), []);\n  const coloredNodes = nodes.map(n => ({\n    ...n,\n    type: \"custom\",\n    data: {\n      ...n.data,\n      bg: getNodeColor(n.data.value)\n    }\n  }));\n  const styledEdges = edges.map(e => ({\n    ...e,\n    animated: true,\n    markerEnd: {\n      type: MarkerType.ArrowClosed\n    }\n  }));\n  const handleNodeClick = useCallback((evt, node) => onNodeClick(evt, node), [onNodeClick]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"h-full w-full\",\n    children: /*#__PURE__*/_jsxDEV(ReactFlow, {\n      nodes: coloredNodes,\n      edges: styledEdges,\n      nodeTypes: nodeTypes,\n      onNodeClick: handleNodeClick,\n      fitView: true,\n      fitViewOptions: {\n        padding: 0.3\n      },\n      children: [/*#__PURE__*/_jsxDEV(MiniMap, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Controls, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Background, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(FlowTree, \"5qpv3sEECEkNYhXGQijKFS72lt8=\");\n_c2 = FlowTree;\nvar _c, _c2;\n$RefreshReg$(_c, \"CustomNode\");\n$RefreshReg$(_c2, \"FlowTree\");","map":{"version":3,"names":["React","useMemo","useCallback","ReactFlow","Background","Controls","MiniMap","MarkerType","jsxDEV","_jsxDEV","getNodeColor","value","Array","isArray","CustomNode","data","style","padding","borderRadius","background","bg","color","textAlign","minWidth","cursor","fontWeight","boxShadow","children","label","fileName","_jsxFileName","lineNumber","columnNumber","_c","FlowTree","nodes","edges","onNodeClick","_s","nodeTypes","custom","coloredNodes","map","n","type","styledEdges","e","animated","markerEnd","ArrowClosed","handleNodeClick","evt","node","className","fitView","fitViewOptions","_c2","$RefreshReg$"],"sources":["C:/Users/abhis/OneDrive/Desktop/JSON TREE VISUALIZER/json-tree-visualizer/src/components/FlowTree.jsx"],"sourcesContent":["import React, { useMemo, useCallback } from \"react\";\nimport ReactFlow, {\n  Background,\n  Controls,\n  MiniMap,\n  MarkerType,\n} from \"reactflow\";\nimport \"reactflow/dist/style.css\";\n\nconst getNodeColor = (value) => {\n  if (value === null) return \"#ffb74d\";\n  if (Array.isArray(value)) return \"#43a047\";\n  if (typeof value === \"object\") return \"#6a1b9a\";\n  return \"#fb8c00\";\n};\n\nconst CustomNode = ({ data }) => (\n  <div\n    style={{\n      padding: 8,\n      borderRadius: 8,\n      background: data.bg,\n      color: \"#fff\",\n      textAlign: \"center\",\n      minWidth: 100,\n      cursor: \"pointer\",\n      fontWeight: 600,\n      boxShadow: \"0 2px 6px rgba(0,0,0,0.2)\",\n    }}\n  >\n    {data.label}\n  </div>\n);\n\nexport default function FlowTree({ nodes, edges, onNodeClick }) {\n  const nodeTypes = useMemo(() => ({ custom: CustomNode }), []);\n\n  const coloredNodes = nodes.map((n) => ({\n    ...n,\n    type: \"custom\",\n    data: { ...n.data, bg: getNodeColor(n.data.value) },\n  }));\n\n  const styledEdges = edges.map((e) => ({\n    ...e,\n    animated: true,\n    markerEnd: { type: MarkerType.ArrowClosed },\n  }));\n\n  const handleNodeClick = useCallback(\n    (evt, node) => onNodeClick(evt, node),\n    [onNodeClick]\n  );\n\n  return (\n    <div className=\"h-full w-full\">\n      <ReactFlow\n        nodes={coloredNodes}\n        edges={styledEdges}\n        nodeTypes={nodeTypes}\n        onNodeClick={handleNodeClick}\n        fitView\n        fitViewOptions={{ padding: 0.3 }}\n      >\n        <MiniMap />\n        <Controls />\n        <Background />\n      </ReactFlow>\n    </div>\n  );\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}